[project]
name = 'llmit'
version = '0.0.1'
description = 'A tool for calling (and calling out to) large language models.'
authors = [
    {name='David Chan', email='davidchan@berkeley.edu'}
]
dependencies=[
    # Base dependencies
    "click",
    "rich",
    "python-dotenv",
    "ratelimit",
    "packaging",

    # Dev dependencies
    "pytest",
    "ruff",
    "mypy",

    # LM Engines
    "openai",
    "anthropic",
    "google-cloud-aiplatform",

    # Local LM Engines
    "torch>=1.13.0",
    "transformers>=4.30.2",

]
requires-python=">=3.8.0"

[project.scripts]
llmit = "llmit.cli:main"



[tool.black]
line-length = 120
target_version =['py38']
exclude = '''

(
  /(
      \.eggs         # exclude a few common directories in the
    | \.git          # root of the project
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
  )
)
'''

[tool.isort]
sections="FUTURE,STDLIB,THIRDPARTY,FIRSTPARTY,LOCALFOLDER"


[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

[tool.mypy]
disallow_untyped_defs = true
disallow_incomplete_defs = true
disallow_untyped_decorators = true
disallow_untyped_calls = true
no_implicit_optional = true
ignore_missing_imports = true

[tool.ruff]
line-length = 120
target-version='py38'
select = ["E", "F", "I", "N", "UP", "PL", "NPY", "RUF", "C90"]
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]
ignore = ["E501", "PLR0913", "N806", "N803", "N812", "N802"]

[tool.pyright]
reportGeneralTypeIssues = false
