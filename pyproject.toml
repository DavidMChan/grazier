[project]
name = 'grazier'
version = '0.0.8'
description = 'A tool for calling (and calling out to) large language models.'
authors = [{ name = 'David Chan', email = 'davidchan@berkeley.edu' }]
dependencies = [
  # Base dependencies
  "click",
  "rich",
  "python-dotenv",
  "ratelimit",
  "fire",          # For weight_diff.py. TODO: Remove this, replace with click

  # For keyring support
  "keyring",
  "keyrings.cryptfile",

  # LM Engines
  "requests",
  "openai",
  "anthropic",
  "google-cloud-aiplatform[pipelines]",
  "ai21",
  "GoogleBard",
  "open-flamingo",

  # Local LM Engines
  "torch>=1.13.0",
  "transformers>=4.34",
  "bitsandbytes",
  "sentencepiece",
  "accelerate",
  "einops",
  "scipy",

  # Image engines
  "pillow",


]
license = { file = "LICENSE" }
requires-python = ">=3.8.0"
readme = "README.md"
keywords = [
  "language-models",
  "api",
  "transformers",
  "huggingface",
  "openai",
  "anthropic",
  "gpt3",
  "gpt-j",
  "gpt-neo",
  "gpt4",
  "vertex",
  "palm",
  "bard",
]
classifiers = [
  "License :: OSI Approved :: MIT License",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Development Status :: 3 - Alpha",
  "Topic :: Scientific/Engineering :: Artificial Intelligence",
  "Topic :: Scientific/Engineering :: Human Machine Interfaces",
  "Typing :: Typed",
]

# Setup the find namespace


[project.optional-dependencies]
dev = ["pytest", "ruff", "mypy"]


[project.scripts]
grazier = "grazier.cli:main"

[project.urls]
homepage = "https://github.com/DavidMChan/grazier"
documentation = "https://github.com/DavidMChan/grazier"
repository = "https://github.com/DavidMChan/grazier"


[tool.black]
line-length = 120
target_version = ['py38']
exclude = '''

(
  /(
      \.eggs         # exclude a few common directories in the
    | \.git          # root of the project
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
  )
)
'''

[tool.isort]
sections = "FUTURE,STDLIB,THIRDPARTY,FIRSTPARTY,LOCALFOLDER"


[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

[tool.mypy]
disallow_untyped_defs = true
disallow_incomplete_defs = true
disallow_untyped_decorators = true
disallow_untyped_calls = true
no_implicit_optional = true
ignore_missing_imports = true

[tool.ruff]
line-length = 120
target-version = 'py38'
select = ["E", "F", "I", "N", "UP", "PL", "NPY", "RUF", "C90"]
exclude = [
  ".bzr",
  ".direnv",
  ".eggs",
  ".git",
  ".hg",
  ".mypy_cache",
  ".nox",
  ".pants.d",
  ".pytype",
  ".ruff_cache",
  ".svn",
  ".tox",
  ".venv",
  "__pypackages__",
  "_build",
  "buck-out",
  "build",
  "dist",
  "node_modules",
  "venv",
]
ignore = ["E501", "PLR0913", "N806", "N803", "N812", "N802"]

[tool.pyright]
reportGeneralTypeIssues = false

[tool.setuptools]
packages = ["grazier"]
